import matplotlib.pyplot as plt

#pretraining epoch
# figsize = 9, 6

#hyper-parameter ins-gnn
figsize = 4, 4
# figure, ax = plt.subplots(figsize = figsize)
# 预训练 Cora
# x1 = [0,10,50,100,200]
# y1 = [0.743,0.744,0.746,0.775,0.774]
# y2 = [0.728,0.741,0.745,0.759,0.761]
# sim cora
# x1 = [0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85]
# y1 = [0.756,0.757,0.754,0.758,0.781,0.752,0.76,0.752]
# y2 = [0.751,0.754,0.749,0.747,0.765,0.743,0.753,0.742]
# sim citeseer
# x1 = [0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85]
# y1 = [0.656,0.677,0.681,0.649,0.672,0.663,0.631,0.621]
# y2 = [0.613,0.634,0.633,0.613,0.62,0.616,0.59,0.584]
# lambda cora
# x1 = [0.01,0.1,1,5,10,20,50]
# y1 = [0.744,0.756,0.781,0.75,0.715,0.627,0.605]
# y2 = [0.732,0.739,0.765,0.735,0.711,0.627,0.59]
# x1 = [0.01,0.1,1,5,10,20,50]
# y1 = [0.713,0.726,0.751,0.75,0.713,0.635,0.580]
# y2 = [0.701,0.713,0.751,0.735,0.696,0.612,0.577]
# x1 = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]
# y1 = [0.753,0.762,0.776,0.772,0.789,0.788,0.783,0.805,0.794,0.764]
# y2 = [0.745,0.736,0.763,0.770,0.780,0.776,0.777,0.793,0.772,0.760]
# lambda  citeseer
# x1=[0.01,0.1,1,5,10,20,50]
# y1=[0.628,	0.61,	0.682,	0.64,	0.63,	0.6,	0.577]
# y2=[0.583,	0.588,	0.639,	0.599,	0.595,	0.56,	0.537]
# x1 = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]
# y1 = [0.650,0.668,0.667,0.673,0.672,0.683,0.689,0.686,0.692,0.665]
# y2 = [0.606,0.609,0.611,0.644,0.647,0.649,0.645,0.654,0.652,0.647]
# addepoch cora
# x1=[1,5,20,50,100,200]
# y1 = [0.741,0.736,0.749,0.755,0.75,0.725]
# y2 = [0.728, 0.721,0.738,0.746,0.746,0.719]

# new lambda cora

# x1=[0,0.25,0.5,0.75,1]
# y1 = [0.159,0.775,0.782,0.773,0.753]
# y2 = [0.079, 0.760,0.768,0.762,0.734]

#new lambda citeseer
x1=[0,0.25,0.5,0.75,1]
y1 = [0.175, 0.623,0.684,0.661,0.603]
y2 = [0.126, 0.582,0.647,0.613,0.580]

# addepoch citeseer
# x1 = [1,5,20,50,100,200]
# y1 = [0.64,0.661,0.682,0.682,0.684,0.664]
# y2 = [0.61,0.629,0.636,0.644,0.645,0.617]
# yita
# x1 = [0.1,0.2,0.3,0.4,0.5]
# y1 = [0.791,0.781,0.768,0.766,0.761]
# y2 = [0.778,0.769,0.765,0.764,0.747]
# yita citeseer
# x1 = [0.1,0.2,0.3,0.4,0.5]
# y1 = [0.634,0.693,0.684,0.672,0.647]
# y2 = [0.605,0.674,0.634,0.630,0.616]
# yita citeseer
# x1 = [0.1,0.2,0.3,0.4,0.5]
# y1 = [0.654,0.727,0.718,0.708,0.667]
# y2 = [0.605,0.684,0.654,0.650,0.616]
# cora similarity
# x1 = [0.8,0.85,0.9,0.95,1]
# y1 = [0.764,0.768,0.776,0.805,0.723]
# y2 = [0.749,0.759,0.767,0.793,0.697]
#citeseer similarity
# x1 = [0.8,0.85,0.9,0.95,1]
# y1 = [0.649,0.657,0.666,0.692,0.641]
# y2 = [0.612,0.616,0.622,0.652,0.603]
# 设置输出的图片大小
#beta1
# x1 = [0.1,0.2,0.3,0.4,0.5]
# y1 = [94.6,94.9,95.8,94.2]
# y2 = [77.6,77.8,78.3,77.9]
#gamma
# x1=[0.1,0.2,0.3,0.4,0.6]
# y1= [95.2,95.3,95.8,95.2,95.0]
# y2=[78.1,78.2,78.3,77.8,77.7]
# pmx
# x1 = [1,2,3,4,6]
# y1 = [95.1,95.4,95.8,94.7,94.7]
# y2 = [78.1,78.3,78.4,77.9,77.7]
# filtered samples
# x1 = []
# y11 = []
# y22 = []
# for i in range(50):
#     x1.append(i+1)
#     y11.append(498)
#     y22.append(683)
# y1 = [55,365,402,437,466,488,510,517,528,533,547,560,569,573,576,581,585,589,586,594,602,604,610,611,610,611,619,621,624,623,622,625,628,630,630,632,634,636,636,638,638,641,642,642,643,646,646,649,648,649]
# y2 = [35,249,274,286,311,320,334,348,350,362,369,373,380,386,394,393,408,408,411,412,414,415,418,421,423,426,427,432,431,434,438,438,441,443,442,444,446,450,454,453,458,458,460,461,463,463,463,464,466,465]



#ablation cora
# x1= [0,10,50,100,200]
# y1= [0.945,0.948,0.958,0.95,0.952]
# y2=[0.743,0.744,0.746,0.775,0.774]
# y3=[0.728,0.741,0.745,0.759,0.761]

#ablation citeseer
# x1= [0,10,50,100,200]
# y1= [0.87,0.874,0.874,0.873,0.883]
# y2=[0.631,0.641,0.638,0.649,0.663]
# y3=[0.598,0.614,0.612,0.615,0.62]
#


# filtered classes
# x1 = []
# y11 = []
# y22 = []
# for i in range(50):
#     x1.append(i+1)
#     y11.append(31)
#     y22.append(31)
# y1 = [27,28,28,30,29,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31]
# y2 = [25,25,26,27,29,28,29,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31]
# figsize = 5, 4
# pmx test error
# x1 = []
# y11 = []
# y22 = []
# for i in range(30):
#     x1.append((i+1)*500)
# y1 = [98,37.5,39,40.5,39,38.1,39.8,40.7,39.5,40.1,40,38.9,40.5,39.8,39.2,40,39.3,40.3,40,40.3,39.9,40,39.7,39.9,40.6,39.9,39.2,40.6,40.1,40.1]
#
# y2 = [94,40,39.3,38.75,37.6,37.7,37.5,36.2,36.1,35.6,35.4,35,35.5,35.3,35.6,35.3,34.8,35.1,34.8,33.7,33.8,33.4,33.3,33.7,33,33.8,33.4,33.0,33.0,33.7]
#
# y3 = [95,37.5,35,33.75,34.0,33.0,33.1,32.4,31.3,32,33.0,33.2,32.5,33.1,33.5,33.5,32,33.6,32.5,32.6,32.5,32.1,32.2,33,32.3,32.5,32.6,32.3,32.3,32.3]
#
# y4 = [95,32.8,31.0,30.0,29.3,28.0,27.8,27.0,26.1,25.6,25.7,25.6,26.3,25.8,26.0,26.3,26.3,25.7,26.4,26.2,26.0,25.8,25.9,26.0,26.3,26.2,25.7,25.7,25.6,25.6]
#
# y5 = [96,31.7,30.8,30.0,29.1,27.6,26.5,26.7,25.3,24.7,24.1,23.7,24.1,23.6,23.9,23.6,24.4,24.0,24.2,23.8,23.9,23.7,23.7,24.0,23.9,23.8,23.9,23.6,23.8,23.6]






# figsize = 5,5
figure, ax = plt.subplots(figsize=figsize)
plt.grid(linestyle = "--")
# 在同一幅图片上画两条折线
# A, = plt.plot(x1, y1, 'b^-', label='A → D',ms=9, linewidth=2.5)
# B, = plt.plot(x1, y2, 'r*-', label='D → A',ms=9, linewidth=2.5,linestyle='--')
# C, = plt.plot(x1, y3, 'g-', label='AUC-ROC',ms=10, linewidth=2.0)

A, = plt.plot(x1, y1, 'b^-', label='ACC',ms=8, linewidth=2.5)
B, = plt.plot(x1, y2, 'r*-', label='F-Score',ms=8, linewidth=2.5,linestyle='--')
# C, = plt.plot(x1, y3, 'limegreen', label='F-Score',ms=12, linewidth=2.5, marker='o')
# B, = plt.plot(x1, y2, 'r-', label='A → D',ms=9, linewidth=2.5)
# C, = plt.plot(x1, y11, 'r-', label='the number of samples in dslr',ms=9, linewidth=2.5, linestyle='--')
# D, = plt.plot(x1, y22, 'b-', label='the number of samples in webcam',ms=9, linewidth=2.5, linestyle='--')
# A, = plt.plot(x1, y1, 'b-', label='A → W',ms=9, linewidth=2.5)
# B, = plt.plot(x1, y2, 'r-', label='A → D',ms=9, linewidth=2.5)
# C, = plt.plot(x1, y11, 'r-', label='the number of classes in dslr',ms=9, linewidth=2.5, linestyle='--')
# D, = plt.plot(x1, y22, 'b-', label='the number of classes in webcam',ms=9, linewidth=2.5, linestyle='--')
# A, = plt.plot(x1, y1, 'g-', label='ResNet',ms=9, linewidth=2.5)
# B, = plt.plot(x1, y2, 'r-', label='RevGrad',ms=9, linewidth=2.5)
# C, = plt.plot(x1, y3, 'b-', label='CDAN',ms=9, linewidth=2.5)
# D, = plt.plot(x1, y4, 'violet', label='SBAN',ms=9, linewidth=2.5)
# E, = plt.plot(x1, y5, 'gold', label='eSBAN',ms=9, linewidth=2.5)

# 设置图例并且设置图例的字体及大小
font1 = {'family': 'Times New Roman',
         'weight': 'bold',
         'size': 15,
         }
legend = plt.legend(handles=[A, B], prop=font1)
# legend = plt.legend(handles=[A], prop=font1)
# 设置坐标刻度值的大小以及刻度值的字体
plt.tick_params(labelsize=15)
labels = ax.get_xticklabels() + ax.get_yticklabels()
# print labels
[label.set_fontname('Times New Roman') for label in labels]
# 设置横纵坐标的名称以及对应字体格式
font2 = {'family': 'Times New Roman',
         'weight': 'bold',
         'size':15,
         }
plt.xlabel('λ', font2)
plt.ylabel('value', font2)
plt.savefig('figure8.png', bbox_inches='tight')
plt.show()
# figsize = 2, 2
# figure, ax = plt.subplots(figsize=figsize)
# plt.grid(linestyle = "--")
# # 在同一幅图片上画两条折线
# A, = plt.plot(x1, y1, 'b^-', label='ACC',ms=5, linewidth=2)
# B, = plt.plot(x1, y2, 'r*-', label='F Score',ms=5, linewidth=2,linestyle='--')
# # C, = plt.plot(x1, y3, 'g-', label='AUC-ROC',ms=10, linewidth=2.0)
#
# # 设置图例并且设置图例的字体及大小
# font1 = {'family': 'Times New Roman',
#          'weight': 'normal',
#          'size': 4,
#          }
# legend = plt.legend(handles=[A, B], prop=font1)
#
# # 设置坐标刻度值的大小以及刻度值的字体
# plt.tick_params(labelsize=10)
# labels = ax.get_xticklabels() + ax.get_yticklabels()
# # print labels
# [label.set_fontname('Times New Roman') for label in labels]
# # 设置横纵坐标的名称以及对应字体格式
# font2 = {'family': 'Times New Roman',
#          'weight': 'normal',
#          'size':12,
#          }
# plt.xlabel('λ', font2)
# plt.ylabel('value', font2)
# plt.savefig('squares_plot.png', bbox_inches='tight')
# plt.show()